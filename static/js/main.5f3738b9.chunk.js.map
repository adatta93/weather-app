{"version":3,"sources":["Forecast/Forecast.jsx","BounceLoader.jsx","SearchPage/SearchPage.jsx","CurrentWeather/CurrentWeather.jsx","Highlights/Highlights.jsx","Header/Header.jsx","HomePage.jsx","serviceWorker.js","index.js","App.jsx"],"names":["Forecast","dateString","weather","baseUrl","tempFormat","toFahrenheit","className","applicable_date","Date","getDate","Intl","DateTimeFormat","weekday","day","month","format","alt","id","src","weather_state_abbr","style","width","max_temp","toFixed","min_temp","BounceLoader","SearchPage","fetchWeather","showSearch","setShowSearch","query","setQuery","searchResult","searchLocation","searchError","loading","onClick","type","placeholder","value","onChange","e","target","map","search","key","woeid","title","CurrentWeather","todayWeather","onSearchPlaces","getLocation","locationError","consolidated_weather","class","fontSize","weather_state_name","padding","console","log","Highlights","wind_speed","transform","wind_direction","wind_direction_compass","humidity","visibility","air_pressure","Header","isDark","toggleDark","setTempFormat","height","filter","HomePage","useState","created","the_temp","predictability","time","sun_rise","sun_set","timezone_name","parent","location_type","latt_long","sources","slug","url","crawl_rate","timezone","setTodayWeather","serviceUrl","weatherLoading","setWeatherLoading","axios","get","then","res","data","setLocationError","err","setSearchResult","setSearchError","setLoading","num","length","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","i","Boolean","window","location","hostname","match","ReactDOM","render","localStorage","getItem","setDark","document","body","classList","add","mode","remove","setItem","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5f3738b9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Forecast.css\";\r\n\r\nexport default function Forecast({\r\n  weather,\r\n  baseUrl,\r\n  tempFormat,\r\n  toFahrenheit,\r\n}) {\r\n  const formatDate = (dateString) => {\r\n    if (new Date(dateString).getDate() - new Date().getDate() === 1) {\r\n      return \"Tomorrow\";\r\n    }\r\n    return new Intl.DateTimeFormat(\"en-GB\", {\r\n      weekday: \"short\",\r\n      day: \"numeric\",\r\n      month: \"short\",\r\n    }).format(new Date(dateString));\r\n  };\r\n\r\n  return (\r\n    <div className=\"forecast-item\">\r\n      <div className=\"forecast-date\">{formatDate(weather.applicable_date)}</div>\r\n      <img\r\n        alt={weather.id}\r\n        src={`${baseUrl}/${weather.weather_state_abbr}.svg`}\r\n        style={{ width: \"50px\" }}\r\n      />\r\n      <div className=\"forecast-temp\">\r\n        <div>\r\n          {tempFormat === \"c\" ? (\r\n            <>\r\n              {weather.max_temp.toFixed()}\r\n              <span>&#176;C</span>\r\n            </>\r\n          ) : (\r\n            <>\r\n              {toFahrenheit(weather.max_temp.toFixed())}\r\n              <span>&#176;F</span>\r\n            </>\r\n          )}\r\n        </div>\r\n        <div>\r\n          {tempFormat === \"c\"\r\n            ? weather.min_temp.toFixed()\r\n            : toFahrenheit(weather.min_temp.toFixed())}\r\n          <span>&#176;C</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function BounceLoader() {\r\n  return (\r\n    <div className=\"spinner\">\r\n      <div className=\"bounce1\"></div>\r\n      <div className=\"bounce2\"></div>\r\n      <div className=\"bounce3\"></div>\r\n      {/* <div className=\"spinner-round\"></div> */}\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport BounceLoader from \"../BounceLoader\";\r\nimport \"./SearchPage.css\";\r\n\r\nexport default function SearchPage({\r\n  fetchWeather,\r\n  showSearch,\r\n  setShowSearch,\r\n  query,\r\n  setQuery,\r\n  searchResult,\r\n  searchLocation,\r\n  searchError,\r\n  loading,\r\n}) {\r\n  return (\r\n    <div className={`search-page ${showSearch ? \"open\" : \"close\"}`}>\r\n      <div className=\"back-section\">\r\n        <span\r\n          className=\"material-icons back-btn\"\r\n          onClick={() => setShowSearch(false)}>\r\n          close\r\n        </span>\r\n      </div>\r\n      <div className=\"search-section\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search location\"\r\n          className=\"search-box\"\r\n          value={query}\r\n          onChange={(e) => setQuery(e.target.value)}\r\n        />\r\n        <button className=\"search-btn\" onClick={searchLocation}>\r\n          Search\r\n        </button>\r\n      </div>\r\n      {loading ? (\r\n        <BounceLoader />\r\n      ) : searchError ? (\r\n        <div className=\"location-error\">{searchError}</div>\r\n      ) : (\r\n        <div className=\"search-result\">\r\n          <div className=\"search-list\">\r\n            {searchResult &&\r\n              searchResult.map((search) => (\r\n                <div\r\n                  className=\"search-list-item\"\r\n                  key={search.woeid}\r\n                  onClick={() => fetchWeather(search.woeid)}>\r\n                  <span>{search.title}</span>\r\n                  <span className=\"material-icons\">keyboard_arrow_right</span>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./CurrentWeather.css\";\r\n\r\nexport default function CurrentWeather({\r\n  todayWeather,\r\n  tempFormat,\r\n  toFahrenheit,\r\n  baseUrl,\r\n  onSearchPlaces,\r\n  getLocation,\r\n  showSearch,\r\n  locationError,\r\n}) {\r\n  const weather = todayWeather.consolidated_weather[0];\r\n\r\n  const dateFormatter = () => {\r\n    console.log(\"Weather\", new Date(weather.applicable_date));\r\n    return new Intl.DateTimeFormat(\"en-GB\", {\r\n      weekday: \"short\",\r\n      day: \"numeric\",\r\n      month: \"short\",\r\n    }).format(new Date(weather.applicable_date));\r\n  };\r\n\r\n  return (\r\n    <div className={`current-temp ${showSearch ? \"close\" : \"open\"}`}>\r\n      <div className=\"change-location\">\r\n        <button className=\"location-btn\" onClick={onSearchPlaces}>\r\n          Search for places\r\n        </button>\r\n        <span className=\"material-icons current-location\" onClick={getLocation}>\r\n          my_location\r\n        </span>\r\n      </div>\r\n      {locationError ? (\r\n        <div className=\"location-error\">{locationError}</div>\r\n      ) : (\r\n        <>\r\n          <img\r\n            alt={weather.id}\r\n            src={`${baseUrl}/${weather.weather_state_abbr}.svg`}\r\n            class=\"current-weather-img\"\r\n          />\r\n          <div className=\"today-temp\">\r\n            {tempFormat === \"c\" ? (\r\n              <>\r\n                {weather.max_temp.toFixed()}\r\n                <span style={{ fontSize: \"3rem\" }}>&#176;C</span>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {toFahrenheit(weather.max_temp.toFixed())}\r\n                <span style={{ fontSize: \"3rem\" }}>&#176;F</span>\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className=\"today-weather\">{weather.weather_state_name}</div>\r\n          <div className=\"today-date\">\r\n            Today<span style={{ padding: \"0 15px\" }}>-</span>\r\n            {dateFormatter()}\r\n          </div>\r\n          <div className=\"chosen-location\">\r\n            <span className=\"material-icons\">place</span>\r\n            {todayWeather.title}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Highlights.css\";\r\n\r\nexport default function Highlights({ todayWeather }) {\r\n  const weather = todayWeather.consolidated_weather[0];\r\n\r\n  return (\r\n    <div className=\"today-highlight\">\r\n      <div className=\"wind\">\r\n        <div>Wind Status</div>\r\n        <div className=\"hightlight-value\">\r\n          {weather.wind_speed.toFixed()}\r\n          <span className=\"highlight-unit\">mph</span>\r\n        </div>\r\n        <div className=\"compass\">\r\n          <span\r\n            className=\"material-icons\"\r\n            style={{\r\n              transform: `rotate(${180 + weather.wind_direction}deg)`,\r\n            }}>\r\n            navigation\r\n          </span>\r\n          {weather.wind_direction_compass}\r\n        </div>\r\n      </div>\r\n      <div className=\"humidity\">\r\n        <div>Humidity</div>\r\n        <div className=\"hightlight-value\">\r\n          {weather.humidity.toFixed()}\r\n          <span className=\"highlight-unit\">%</span>\r\n        </div>\r\n        <div className=\"progress-bar-scale\">\r\n          <span>0%</span>\r\n          <span>50%</span>\r\n          <span>100%</span>\r\n        </div>\r\n        <div className=\"progress-bar-track\">\r\n          <div\r\n            className=\"progress-bar-fill\"\r\n            style={{\r\n              width: `${weather.humidity.toFixed()}%`,\r\n            }}></div>\r\n        </div>\r\n      </div>\r\n      <div className=\"visibility\">\r\n        <div>Visibility</div>\r\n        <div className=\"hightlight-value\">\r\n          {weather.visibility.toFixed(1)}\r\n          <span className=\"highlight-unit\">miles</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"air-pressure\">\r\n        <div>Air Pressure</div>\r\n        <div className=\"hightlight-value\">\r\n          {weather.air_pressure.toFixed()}\r\n          <span className=\"highlight-unit\">mb</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nexport default function Header({\r\n  isDark,\r\n  toggleDark,\r\n  tempFormat,\r\n  setTempFormat,\r\n}) {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"dark-mode\">\r\n        <img\r\n          src=\"https://cdn0.iconfinder.com/data/icons/multimedia-solid-30px/30/moon_dark_mode_night-128.png\"\r\n          title={`${isDark ? \"Show Light Mode\" : \"Show Dark Mode\"}`}\r\n          alt=\"toggle mode\"\r\n          onClick={() => toggleDark(!isDark)}\r\n          height=\"30\"\r\n          width=\"30\"\r\n          style={\r\n            isDark\r\n              ? { filter: \"invert(1) contrast(1.5)\" }\r\n              : { filter: \"invert(0) contrast(1.5)\" }\r\n          }\r\n        />\r\n      </div>\r\n      <div className=\"change-temp-format\">\r\n        <div\r\n          className={`temp-format ${tempFormat === \"c\" && \"selected\"}`}\r\n          onClick={() => setTempFormat(\"c\")}>\r\n          &#176;C\r\n        </div>\r\n        <div\r\n          className={`temp-format ${tempFormat === \"f\" && \"selected\"}`}\r\n          onClick={() => setTempFormat(\"f\")}>\r\n          &#176;F\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Forecast from \"./Forecast/Forecast\";\r\nimport SearchPage from \"./SearchPage/SearchPage\";\r\nimport CurrentWeather from \"./CurrentWeather/CurrentWeather\";\r\nimport Highlights from \"./Highlights/Highlights\";\r\nimport Header from \"./Header/Header\";\r\nimport BounceLoader from \"./BounceLoader\";\r\n\r\nexport default function HomePage({ isDark, toggleDark }) {\r\n  const [todayWeather, setTodayWeather] = useState({\r\n    consolidated_weather: [\r\n      {\r\n        id: 6642255035105280,\r\n        weather_state_name: \"Heavy Rain\",\r\n        weather_state_abbr: \"hr\",\r\n        wind_direction_compass: \"SSW\",\r\n        created: \"2020-07-22T19:00:11.969947Z\",\r\n        applicable_date: \"2020-07-23\",\r\n        min_temp: 21.64,\r\n        max_temp: 27.66,\r\n        the_temp: 28.17,\r\n        wind_speed: 2.8225931120151646,\r\n        wind_direction: 275.02479300353485,\r\n        air_pressure: 1007.5,\r\n        humidity: 71,\r\n        visibility: 10.827703710331662,\r\n        predictability: 77,\r\n      },\r\n      {\r\n        id: 5503460831133696,\r\n        weather_state_name: \"Heavy Rain\",\r\n        weather_state_abbr: \"hr\",\r\n        wind_direction_compass: \"S\",\r\n        created: \"2020-07-22T19:00:14.280701Z\",\r\n        applicable_date: \"2020-07-24\",\r\n        min_temp: 20.28,\r\n        max_temp: 27.225,\r\n        the_temp: 27.37,\r\n        wind_speed: 4.422349187215992,\r\n        wind_direction: 190.11736490002653,\r\n        air_pressure: 1008.5,\r\n        humidity: 74,\r\n        visibility: 10.741333114610674,\r\n        predictability: 77,\r\n      },\r\n      {\r\n        id: 5379313526374400,\r\n        weather_state_name: \"Heavy Rain\",\r\n        weather_state_abbr: \"hr\",\r\n        wind_direction_compass: \"WSW\",\r\n        created: \"2020-07-22T19:00:17.364258Z\",\r\n        applicable_date: \"2020-07-25\",\r\n        min_temp: 19.72,\r\n        max_temp: 27.14,\r\n        the_temp: 26.705,\r\n        wind_speed: 6.101861738572073,\r\n        wind_direction: 241.01241222105557,\r\n        air_pressure: 1010.0,\r\n        humidity: 73,\r\n        visibility: 10.135496202179272,\r\n        predictability: 77,\r\n      },\r\n      {\r\n        id: 5380335728590848,\r\n        weather_state_name: \"Light Rain\",\r\n        weather_state_abbr: \"lr\",\r\n        wind_direction_compass: \"W\",\r\n        created: \"2020-07-22T19:00:20.883036Z\",\r\n        applicable_date: \"2020-07-26\",\r\n        min_temp: 19.155,\r\n        max_temp: 28.189999999999998,\r\n        the_temp: 28.125,\r\n        wind_speed: 5.343479980007423,\r\n        wind_direction: 261.66024690574216,\r\n        air_pressure: 1010.5,\r\n        humidity: 71,\r\n        visibility: 10.879588204883479,\r\n        predictability: 75,\r\n      },\r\n      {\r\n        id: 5010490256261120,\r\n        weather_state_name: \"Showers\",\r\n        weather_state_abbr: \"s\",\r\n        wind_direction_compass: \"W\",\r\n        created: \"2020-07-22T19:00:23.487909Z\",\r\n        applicable_date: \"2020-07-27\",\r\n        min_temp: 19.869999999999997,\r\n        max_temp: 29.495,\r\n        the_temp: 27.39,\r\n        wind_speed: 6.618573132903841,\r\n        wind_direction: 270.5,\r\n        air_pressure: 1010.0,\r\n        humidity: 69,\r\n        visibility: 9.999726596675416,\r\n        predictability: 73,\r\n      },\r\n      {\r\n        id: 5911162078101504,\r\n        weather_state_name: \"Showers\",\r\n        weather_state_abbr: \"s\",\r\n        wind_direction_compass: \"WNW\",\r\n        created: \"2020-07-22T19:00:26.224740Z\",\r\n        applicable_date: \"2020-07-28\",\r\n        min_temp: 20.345,\r\n        max_temp: 29.384999999999998,\r\n        the_temp: 27.33,\r\n        wind_speed: 6.602986359659588,\r\n        wind_direction: 287.5,\r\n        air_pressure: 1008.0,\r\n        humidity: 70,\r\n        visibility: 9.999726596675416,\r\n        predictability: 73,\r\n      },\r\n    ],\r\n    time: \"2020-07-23T00:32:18.728032+05:30\",\r\n    sun_rise: \"2020-07-23T06:03:09.272804+05:30\",\r\n    sun_set: \"2020-07-23T18:48:48.468264+05:30\",\r\n    timezone_name: \"LMT\",\r\n    parent: {\r\n      title: \"India\",\r\n      location_type: \"Country\",\r\n      woeid: 23424848,\r\n      latt_long: \"21.786600,82.794762\",\r\n    },\r\n    sources: [\r\n      {\r\n        title: \"BBC\",\r\n        slug: \"bbc\",\r\n        url: \"http://www.bbc.co.uk/weather/\",\r\n        crawl_rate: 360,\r\n      },\r\n      {\r\n        title: \"Forecast.io\",\r\n        slug: \"forecast-io\",\r\n        url: \"http://forecast.io/\",\r\n        crawl_rate: 480,\r\n      },\r\n      {\r\n        title: \"Met Office\",\r\n        slug: \"met-office\",\r\n        url: \"http://www.metoffice.gov.uk/\",\r\n        crawl_rate: 180,\r\n      },\r\n      {\r\n        title: \"OpenWeatherMap\",\r\n        slug: \"openweathermap\",\r\n        url: \"http://openweathermap.org/\",\r\n        crawl_rate: 360,\r\n      },\r\n      {\r\n        title: \"Weather Underground\",\r\n        slug: \"wunderground\",\r\n        url: \"https://www.wunderground.com/?apiref=fc30dc3cd224e19b\",\r\n        crawl_rate: 720,\r\n      },\r\n      {\r\n        title: \"World Weather Online\",\r\n        slug: \"world-weather-online\",\r\n        url: \"http://www.worldweatheronline.com/\",\r\n        crawl_rate: 360,\r\n      },\r\n    ],\r\n    title: \"Bangalore\",\r\n    location_type: \"City\",\r\n    woeid: 2295420,\r\n    latt_long: \"12.955800,77.620979\",\r\n    timezone: \"Asia/Kolkata\",\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   axios\r\n  //     .get(\r\n  //       \"https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/2295420/\"\r\n  //     )\r\n  //     .then((res) => {\r\n  //       console.log(res.data);\r\n  //       setTodayWeather(res.data);\r\n  //     });\r\n  // }, []);\r\n\r\n  const baseUrl = \"https://www.metaweather.com/static/img/weather\";\r\n  //const serviceUrl = \"https://www.metaweather.com\";\r\n  const serviceUrl = \"https://cors-anywhere.herokuapp.com/https://www.metaweather.com\";\r\n\r\n  const [showSearch, setShowSearch] = useState(false);\r\n  const onSearchPlaces = () => {\r\n    setShowSearch(true);\r\n  };\r\n\r\n  const [weatherLoading, setWeatherLoading] = useState(false);\r\n\r\n  const fetchWeather = (woeid) => {\r\n    setShowSearch(false);\r\n    setWeatherLoading(true);\r\n    axios\r\n      .get(\r\n        `${serviceUrl}/api/location/${woeid}`\r\n      )\r\n      .then(\r\n        (res) => {\r\n          console.log(res.data);\r\n          setTodayWeather(res.data);\r\n          setLocationError(\"\");\r\n          setWeatherLoading(false);\r\n        },\r\n        (err) => {\r\n          setLocationError(\"Error fetching weather data\");\r\n          setWeatherLoading(false);\r\n        }\r\n      );\r\n  };\r\n\r\n  const getLocation = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (pos) => {\r\n          axios\r\n            .get(\r\n              `${serviceUrl}/api/location/search/?lattlong=${pos.coords.latitude},${pos.coords.longitude}`\r\n            )\r\n            .then(\r\n              (res) => {\r\n                fetchWeather(res.data[0].woeid);\r\n                setLocationError(\"\");\r\n              },\r\n              (err) => {\r\n                setLocationError(\"Error fetching weather data\");\r\n              }\r\n            );\r\n        },\r\n        (err) => {\r\n          setLocationError(\"Error fetching location\");\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const [query, setQuery] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState(\"\");\r\n  const [searchError, setSearchError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [locationError, setLocationError] = useState(\"\");\r\n  const [tempFormat, setTempFormat] = useState(\"c\");\r\n\r\n  const searchLocation = () => {\r\n    setLoading(true);\r\n    axios\r\n      .get(\r\n        `${serviceUrl}/api/location/search/?query=${query}`\r\n      )\r\n      .then(\r\n        (res) => {\r\n          if (res.data && res.data.length > 0) {\r\n            setSearchResult(res.data);\r\n            setLoading(false);\r\n            setSearchError(\"\");\r\n          } else {\r\n            setLoading(false);\r\n            setSearchError(\"No Result found\");\r\n          }\r\n        },\r\n        (err) => {\r\n          setSearchError(\"Error fetching location\");\r\n          setLoading(false);\r\n        }\r\n      );\r\n  };\r\n\r\n  const toFahrenheit = (num) => {\r\n    return ((num * 9) / 5 + 32).toFixed();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {todayWeather && todayWeather.consolidated_weather && (\r\n        <div className=\"page-container\">\r\n          <div className=\"left-panel\">\r\n            <SearchPage\r\n              fetchWeather={fetchWeather}\r\n              showSearch={showSearch}\r\n              setShowSearch={setShowSearch}\r\n              query={query}\r\n              setQuery={setQuery}\r\n              searchResult={searchResult}\r\n              searchLocation={searchLocation}\r\n              searchError={searchError}\r\n              loading={loading}\r\n            />\r\n            {weatherLoading ? (\r\n              <BounceLoader />\r\n            ) : (\r\n              <CurrentWeather\r\n                todayWeather={todayWeather}\r\n                tempFormat={tempFormat}\r\n                toFahrenheit={toFahrenheit}\r\n                baseUrl={baseUrl}\r\n                onSearchPlaces={onSearchPlaces}\r\n                getLocation={getLocation}\r\n                showSearch={showSearch}\r\n                locationError={locationError}\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"right-panel\">\r\n            <Header\r\n              isDark={isDark}\r\n              toggleDark={toggleDark}\r\n              tempFormat={tempFormat}\r\n              setTempFormat={setTempFormat}\r\n            />\r\n            {locationError ? (\r\n              <div className=\"location-error\">{locationError}</div>\r\n            ) : (\r\n              <>\r\n                <div className=\"forcase-list\">\r\n                  {todayWeather.consolidated_weather.map((weather, i) =>\r\n                    i > 0 ? (\r\n                      <Forecast\r\n                        key={i}\r\n                        weather={weather}\r\n                        baseUrl={baseUrl}\r\n                        tempFormat={tempFormat}\r\n                        toFahrenheit={toFahrenheit}\r\n                      />\r\n                    ) : null\r\n                  )}\r\n                </div>\r\n                <h3>Today's Highlights</h3>\r\n                <Highlights todayWeather={todayWeather} />\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport HomePage from \"./HomePage\";\r\n\r\nexport default function App() {\r\n  const [isDark, setDark] = useState(() => {\r\n    let localStorageIsDark = localStorage.getItem(\"isDark\");\r\n    return localStorageIsDark === \"true\" ? true : false;\r\n  });\r\n\r\n  isDark\r\n    ? document.body.classList.add(\"dark\")\r\n    : document.body.classList.add(\"light\");\r\n\r\n  const toggleDark = (mode) => {\r\n    if (!isDark) {\r\n      document.body.classList.remove(\"light\");\r\n      document.body.classList.add(\"dark\");\r\n      setDark(true);\r\n      localStorage.setItem(\"isDark\", true);\r\n    } else {\r\n      document.body.classList.remove(\"dark\");\r\n      document.body.classList.add(\"light\");\r\n      setDark(false);\r\n      localStorage.setItem(\"isDark\", false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HomePage isDark={isDark} toggleDark={toggleDark} />\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}