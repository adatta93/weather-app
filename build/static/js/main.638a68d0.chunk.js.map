{"version":3,"sources":["search.svg","BorderCountry.jsx","Country.jsx","CountryList.jsx","SearchBox.jsx","SelectRegion.jsx","Dashboard.jsx","WithSpinner.jsx","CountryDetails.jsx","Header.jsx","serviceWorker.js","index.js","App.jsx"],"names":["module","exports","BorderCountry","borders","selectBorderCountry","useState","borderCountries","setBorderCountries","useEffect","codes","forEach","bor","console","log","axios","get","then","res","data","catch","error","className","map","country","i","key","onClick","e","name","Country","chooseCountry","event","alt","src","flag","population","region","capital","CountryList","countries","SearchBox","setCountries","search","setSearch","setRegion","isDark","inpRef","useRef","searchIcon","current","focus","style","filter","type","ref","placeholder","value","onChange","target","SelectRegion","isOpen","setOpen","isFetching","setFetching","close","window","addEventListener","removeEventListener","onRegionClick","regionName","focusable","height","viewBox","width","fill","xmlns","d","DetailsWithSpinner","WrappedComponent","this","props","isLoading","otherProps","React","Component","withSpinner","countryDtls","allCurrencies","currencies","curr","join","allLangs","languages","nativeName","subregion","topLevelDomain","Dashboard","selectedCountry","setSelectedCountry","setCountryDtls","isDtlsFetching","setDtlsFetching","length","cName","Header","toggleDark","title","Boolean","location","hostname","match","ReactDOM","render","localStorage","getItem","setDark","document","body","classList","add","mode","remove","setItem","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.638a68d0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.4bf6198c.svg\";","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nexport default function BorderCountry({ borders, selectBorderCountry }) {\r\n  const [borderCountries, setBorderCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let codes = \"\";\r\n    borders.forEach((bor) => (codes += bor + \";\"));\r\n    console.log(\"Border Codes \", codes);\r\n    axios\r\n      .get(`https://restcountries.eu/rest/v2/alpha?codes=${codes}`)\r\n      .then((res) => {\r\n        console.log(\"R\", res.data);\r\n        setBorderCountries(res.data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, [borders]);\r\n\r\n  return (\r\n    <div className=\"border-list\">\r\n      {borderCountries.map((country, i) => (\r\n        <div\r\n          key={i}\r\n          className=\"border-name\"\r\n          onClick={(e) => selectBorderCountry({ country })}>\r\n          {/* <Link to={c.name}>{c.name}</Link> */}\r\n          {country.name}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Country({ country, chooseCountry }) {\r\n  return (\r\n    <div className=\"card\" onClick={(event) => chooseCountry({ country })}>\r\n      {/* <div className=\"flag-container\"> */}\r\n      <img className=\"flag\" alt=\"Flag\" src={country.flag} />\r\n      {/* </div> */}\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{country.name}</h5>\r\n        <p className=\"card-text\">\r\n          <span>Population: {country.population}</span>\r\n        </p>\r\n        <p className=\"card-text\">\r\n          <span>Region: {country.region}</span>\r\n        </p>\r\n        <p className=\"card-text\">\r\n          <span>Capital: {country.capital}</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Country from \"./Country\";\r\n\r\nexport default function CountryList({ countries, chooseCountry }) {\r\n  return (\r\n    <div className=\"card-group\">\r\n      {countries.map((country, i) => (\r\n        <Country key={i} country={country} chooseCountry={chooseCountry} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport searchIcon from \"./search.svg\";\r\n\r\nexport default function SearchBox({\r\n  setCountries,\r\n  search,\r\n  setSearch,\r\n  setRegion,\r\n  isDark,\r\n}) {\r\n  const inpRef = useRef(null);\r\n  /* For Type-ahead Search */\r\n  useEffect(() => {\r\n    if (search) {\r\n      axios\r\n        .get(`https://restcountries.eu/rest/v2/name/${search}`)\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          setCountries(res.data);\r\n          setRegion(\"\");\r\n        })\r\n        .catch((error) => console.log(error));\r\n    } else {\r\n      axios\r\n        .get(\"https://restcountries.eu/rest/v2/all\")\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          setCountries(res.data);\r\n          setRegion(\"\");\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  }, [search, setCountries, setRegion]);\r\n\r\n  return (\r\n    <div className=\"search-container\">\r\n      <img\r\n        alt=\"Search\"\r\n        src={searchIcon}\r\n        onClick={() => inpRef.current.focus()}\r\n        style={\r\n          isDark\r\n            ? { filter: \"invert(1) contrast(0.5)\" }\r\n            : { filter: \"invert(0) contrast(0.5)\" }\r\n        }\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        name=\"searchText\"\r\n        ref={inpRef}\r\n        placeholder=\"Search for a country\"\r\n        value={search}\r\n        onChange={(e) => setSearch(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nexport default function SelectRegion({\r\n  setCountries,\r\n  region,\r\n  setRegion,\r\n  setSearch,\r\n}) {\r\n  const [isOpen, setOpen] = useState(false);\r\n  const [isFetching, setFetching] = useState(false);\r\n\r\n  /* For Region Filter */\r\n  useEffect(() => {\r\n    if (region) {\r\n      axios\r\n        .get(`https://restcountries.eu/rest/v2/region/${region}`)\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          setCountries(res.data);\r\n          setSearch(\"\");\r\n          setFetching(false);\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  }, [region, setCountries, setSearch]);\r\n\r\n  useEffect(() => {\r\n    function close(event) {\r\n      setOpen(false);\r\n    }\r\n    if (isOpen) {\r\n      window.addEventListener(\"click\", close);\r\n    } else {\r\n      window.removeEventListener(\"click\", close);\r\n    }\r\n    return () => window.removeEventListener(\"click\", close);\r\n  }, [isOpen]);\r\n\r\n  const onRegionClick = (regionName) => {\r\n    setRegion(regionName);\r\n    setOpen(false);\r\n    setFetching(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dd-wrapper\">\r\n      <button\r\n        type=\"button\"\r\n        className=\"dd-header\"\r\n        onClick={() => setOpen(!isOpen)}>\r\n        <div className=\"dd-header-title\">{region || \"Filter by Region\"}</div>\r\n        <svg\r\n          focusable=\"false\"\r\n          className={`dd-header-icon ${isOpen ? \"open\" : \"close\"}`}\r\n          height=\"30px\"\r\n          viewBox=\"0 0 24 24\"\r\n          width=\"30px\"\r\n          fill=\"#aaa\"\r\n          xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path d=\"M7 10l5 5 5-5z\"></path>\r\n          <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n        </svg>\r\n        {isFetching && (\r\n          <div className=\"spinner-overlay small\">\r\n            <div className=\"spinner-container\"></div>\r\n          </div>\r\n        )}\r\n      </button>\r\n      {isOpen && (\r\n        <ul className=\"dd-list\">\r\n          <li className=\"dd-list-item\" onClick={() => onRegionClick(\"Africa\")}>\r\n            Africa\r\n          </li>\r\n          <li\r\n            className=\"dd-list-item\"\r\n            onClick={() => onRegionClick(\"Americas\")}>\r\n            Americas\r\n          </li>\r\n          <li className=\"dd-list-item\" onClick={() => onRegionClick(\"Asia\")}>\r\n            Asia\r\n          </li>\r\n          <li className=\"dd-list-item\" onClick={() => onRegionClick(\"Europe\")}>\r\n            Europe\r\n          </li>\r\n          <li className=\"dd-list-item\" onClick={() => onRegionClick(\"Oceania\")}>\r\n            Oceania\r\n          </li>\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport CountryDetails from \"./CountryDetails\";\r\nimport CountryList from \"./CountryList\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport SelectRegion from \"./SelectRegion\";\r\nimport withSpinner from \"./WithSpinner\";\r\n\r\nconst DetailsWithSpinner = withSpinner(CountryDetails);\r\n\r\nexport default function Dashboard({ isDark }) {\r\n  const [countries, setCountries] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [region, setRegion] = useState(\"\");\r\n  const [selectedCountry, setSelectedCountry] = useState(null);\r\n  const [countryDtls, setCountryDtls] = useState([]);\r\n  const [isDtlsFetching, setDtlsFetching] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (selectedCountry) {\r\n      setDtlsFetching(true);\r\n      axios\r\n        .get(\r\n          `https://restcountries.eu/rest/v2/name/${selectedCountry}?fullText=true`\r\n        )\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          setDtlsFetching(false);\r\n          setCountryDtls(res.data);\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  }, [selectedCountry]);\r\n\r\n  const chooseCountry = (cName) => {\r\n    console.log(\"hi\", cName);\r\n    setDtlsFetching(true);\r\n    setSelectedCountry(cName.country.name);\r\n  };\r\n\r\n  const selectBorderCountry = (borderCountry) => {\r\n    setSelectedCountry(borderCountry.country.name);\r\n  };\r\n\r\n  const backToList = () => {\r\n    setCountryDtls([]);\r\n    setDtlsFetching(false);\r\n    setSelectedCountry(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        {countryDtls.length > 0 || isDtlsFetching ? (\r\n          <>\r\n            <button className=\"back-btn\" onClick={backToList}>\r\n              &#8592;&nbsp;Back\r\n            </button>\r\n            <DetailsWithSpinner\r\n              isLoading={isDtlsFetching}\r\n              countryDtls={countryDtls}\r\n              selectBorderCountry={(props) => selectBorderCountry(props)}\r\n            />\r\n            {/* <CountryDetails countryDtls={countryDtls} /> */}\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"search-panel\">\r\n              <SearchBox\r\n                setCountries={setCountries}\r\n                search={search}\r\n                setSearch={setSearch}\r\n                setRegion={setRegion}\r\n                isDark={isDark}\r\n              />\r\n              <SelectRegion\r\n                setCountries={setCountries}\r\n                region={region}\r\n                setSearch={setSearch}\r\n                setRegion={setRegion}\r\n              />\r\n            </div>\r\n            <CountryList\r\n              countries={countries}\r\n              chooseCountry={(props) => chooseCountry(props)}\r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nconst withSpinner = (WrappedComponent) => {\r\n  class WithSpinner extends React.Component {\r\n    render() {\r\n      const { isLoading, ...otherProps } = this.props;\r\n      return (\r\n        <>\r\n          {isLoading ? (\r\n            <div className=\"spinner-overlay\">\r\n              <div className=\"spinner-container\"></div>\r\n            </div>\r\n          ) : (\r\n            <WrappedComponent {...otherProps} />\r\n          )}\r\n        </>\r\n      );\r\n    }\r\n  }\r\n  return WithSpinner;\r\n};\r\n\r\nexport default withSpinner;\r\n","import React from \"react\";\r\nimport BorderCountry from \"./BorderCountry\";\r\n\r\nexport default function CountryDetails({ countryDtls, selectBorderCountry }) {\r\n  let allCurrencies = countryDtls.map((country) =>\r\n    country.currencies.map((curr) => curr.name).join(\",\")\r\n  );\r\n  let allLangs = countryDtls.map((country) =>\r\n    country.languages.map((curr) => curr.name).join(\",\")\r\n  );\r\n  return (\r\n    <>\r\n      {countryDtls.map((country, i) => (\r\n        <div key={i} className=\"details-container\">\r\n          <div className=\"details-flag\">\r\n            <img alt=\"flag\" src={country.flag} />\r\n          </div>\r\n          <div className=\"details-content\">\r\n            <h2>{country.name}</h2>\r\n            <div className=\"details-row\">\r\n              <div className=\"left-col\">\r\n                <p>\r\n                  <b>Native Name:</b> {country.nativeName}\r\n                </p>\r\n                <p>\r\n                  <b>Population:</b> {country.population}\r\n                </p>\r\n                <p>\r\n                  <b>Region:</b> {country.region}\r\n                </p>\r\n                <p>\r\n                  <b>Sub Region:</b> {country.subregion}\r\n                </p>\r\n                <p>\r\n                  <b>Captial:</b> {country.capital}\r\n                </p>\r\n              </div>\r\n              <div className=\"right-col\">\r\n                <p>\r\n                  <b>Top Level Domain:</b> {country.topLevelDomain}\r\n                </p>\r\n                <p>\r\n                  <b>Currencies:</b> {allCurrencies}\r\n                </p>\r\n                <p>\r\n                  <b>Languages:</b> {allLangs}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"border-country\">\r\n              <div className=\"country-label\">Border Countries:</div>\r\n              <BorderCountry\r\n                borders={country.borders}\r\n                selectBorderCountry={selectBorderCountry}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Header({ isDark, toggleDark }) {\r\n  return (\r\n    <div className=\"header-container\">\r\n      <div className=\"header-name\">Countries App</div>\r\n      <div className=\"dark-mode\">\r\n        <img\r\n          src=\"https://cdn0.iconfinder.com/data/icons/multimedia-solid-30px/30/moon_dark_mode_night-128.png\"\r\n          title={`${isDark ? \"Show Light Mode\" : \"Show Dark Mode\"}`}\r\n          alt=\"toggle mode\"\r\n          onClick={() => toggleDark(!isDark)}\r\n          height=\"30\"\r\n          width=\"30\"\r\n          style={\r\n            isDark\r\n              ? { filter: \"invert(1) contrast(1.5)\" }\r\n              : { filter: \"invert(0) contrast(1.5)\" }\r\n          }\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport Header from \"./Header\";\r\n\r\nexport default function App() {\r\n  const [isDark, setDark] = useState(() => {\r\n    let localStorageIsDark = localStorage.getItem(\"isDark\");\r\n    return localStorageIsDark === \"true\" ? true : false;\r\n  });\r\n\r\n  isDark\r\n    ? document.body.classList.add(\"dark\")\r\n    : document.body.classList.add(\"light\");\r\n\r\n  const toggleDark = (mode) => {\r\n    if (!isDark) {\r\n      document.body.classList.remove(\"light\");\r\n      document.body.classList.add(\"dark\");\r\n      setDark(true);\r\n      localStorage.setItem(\"isDark\", true);\r\n    } else {\r\n      document.body.classList.remove(\"dark\");\r\n      document.body.classList.add(\"light\");\r\n      setDark(false);\r\n      localStorage.setItem(\"isDark\", false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header isDark={isDark} toggleDark={toggleDark}></Header>\r\n      <Dashboard isDark={isDark}></Dashboard>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}